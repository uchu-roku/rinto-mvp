name: Deploy to Production

on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-prod-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            frontend/package-lock.json
            functions/package-lock.json

      - name: Ensure npm registry (quiet)
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set audit false
          npm config set fund false

      # ---------- Frontend ----------
      - name: Create frontend/.env from secrets
        working-directory: frontend
        run: |
          {
            echo VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
            echo VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
            echo VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
            echo VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
            echo VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
            # echo VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          } > .env

      # rollup 周りの一時回避（不要になったら削除OK）
      - name: Pin transitive deps (math-intrinsics)
        working-directory: frontend
        run: npm pkg set "overrides.math-intrinsics=1.0.0"

      - name: Install deps (frontend)
        working-directory: frontend
        run: npm ci

      - name: Build (frontend)
        working-directory: frontend
        env:
          CI: "true"
          ENABLE_PWA: "0"   # CIではPWA無効化（vite-plugin-pwaのbuildEnd回避）
        run: npm run build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
          if-no-files-found: error
          retention-days: 7

      # ---------- Functions ----------
      - name: Install deps (functions) — lockfile が無ければ npm install
        working-directory: functions
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            echo "package-lock.json が無いので npm install を使用します"
            npm install --no-audit --fund=false
          fi

      - name: Build (functions)
        working-directory: functions
        env:
          CI: "true"
        run: npm run build

      # ---------- Deploy ----------
      - name: Deploy Hosting (live)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live
          entryPoint: .
        # ※ firebase.json の hosting.public が "frontend/dist" を指していること

      - name: Deploy Functions (api)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          npm i -g firebase-tools@latest
          firebase deploy --only functions:api \
            --project ${{ secrets.FIREBASE_PROJECT_ID }} \
            --token "$FIREBASE_TOKEN"
