rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    /* ---------- 共通ヘルパ ---------- */
    function signedIn() { return request.auth != null; }
    function isAdmin()  { return signedIn() && request.auth.token.admin == true; }
    function isOwner(uid) { return signedIn() && request.auth.uid == uid; }

    // 画像アップロード制限（JPEG/PNG/WEBP/HEIC/HEIF、10MB未満）
    function isImage() {
      return request.resource.contentType.matches('^image/(jpeg|jpg|png|webp|heic|heif)$');
    }
    function smallEnough() {
      return request.resource.size < 10 * 1024 * 1024; // 10MB
    }

    /* ---------- レポート写真（本人 or 同一組織のみ閲覧） ---------- */
    // パス: reports/{uid}/** に限定
    match /reports/{uid}/{allPaths=**} {

      // 読み取り:
      //  - アドミン or 本人
      //  - もしくはオブジェクトの org_id メタデータと閲覧者の org_id が一致
      allow read: if isAdmin()
                  || isOwner(uid)
                  || (signedIn()
                      && resource.metadata.org_id != null
                      && request.auth.token.org_id != null
                      && resource.metadata.org_id == request.auth.token.org_id);

      // 書き込み:
      //  - 本人のみ
      //  - 画像MIMEのみ
      //  - 10MB未満
      //  - カスタムメタデータ org_id がトークンの org_id と一致（なりすまし/混在防止）
      allow write: if isOwner(uid)
                   && isImage()
                   && smallEnough()
                   && request.resource.metadata.org_id != null
                   && request.auth.token.org_id != null
                   && request.resource.metadata.org_id == request.auth.token.org_id;
    }

    /* ---------- タイル/ラスタ（公開読み取り、書き込み不可） ---------- */
    match /rasters/{allPaths=**} {
      allow read: if true;
      allow write: if false;
    }

    /* ---------- 既定: 全拒否 ---------- */
    match /{all=**} {
      allow read, write: if false;
    }
  }
}
